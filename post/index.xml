<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Starlights</title>
    <link>https://star-lights.github.io/post/</link>
    <description>Recent content in Posts on Starlights</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 27 Oct 2021 14:01:55 +0800</lastBuildDate><atom:link href="https://star-lights.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>“托拉拽”bug修复经验小结</title>
      <link>https://star-lights.github.io/post/drag-n-drop/</link>
      <pubDate>Wed, 27 Oct 2021 14:01:55 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/drag-n-drop/</guid>
      <description>1.表单数据已更新，视图未更新 经排查是因为代码中使用了v-show 进行右侧的表单显示和隐藏，应该使用v-if进行动态控制表单的显示隐藏。 v-</description>
    </item>
    
    <item>
      <title>Python中sorted使用的排序算法</title>
      <link>https://star-lights.github.io/post/timsort/</link>
      <pubDate>Sun, 24 Oct 2021 18:36:52 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/timsort/</guid>
      <description>我们知道一些基础的排序算法，如冒泡排序，插入排序，选择排序，还有快速排序，归并排序，以及桶排序，计数排序等。今天我将向大家介绍Python中</description>
    </item>
    
    <item>
      <title>图形可视化-G6</title>
      <link>https://star-lights.github.io/post/g6/</link>
      <pubDate>Sun, 24 Oct 2021 18:26:40 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/g6/</guid>
      <description>G6是什么? 下面各个维度解释下G6 G6 是一个图可视化引擎。它提供了图的绘制、布局、分析、交互、动画等图可视化的基础能力。旨在让关系变得透明，简</description>
    </item>
    
    <item>
      <title>基于Executor的排队策略</title>
      <link>https://star-lights.github.io/post/executor/</link>
      <pubDate>Sat, 23 Oct 2021 21:49:34 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/executor/</guid>
      <description>1、问题 ​ 最近在开发过程中遇到一个问题：两个业务系统需要业务交流，业务系统A需要多次请求业务系统B进行数据处理，B的数据处理耗费较长时间，且</description>
    </item>
    
    <item>
      <title>基于RSA的PSI协议</title>
      <link>https://star-lights.github.io/post/psi/</link>
      <pubDate>Thu, 14 Oct 2021 16:31:39 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/psi/</guid>
      <description>协议流程图 FATE中的隐私求交（PSI）基于RSA技术，协议流程如下图所示。 Client方持有的ID集合记为$X_A$：{$u_1,u_2,</description>
    </item>
    
    <item>
      <title>日志与监控系统搭建</title>
      <link>https://star-lights.github.io/post/monitor/</link>
      <pubDate>Sat, 09 Oct 2021 12:01:30 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/monitor/</guid>
      <description>1. 监控系统思路及简单实验 1.1 思路 我们的目标系统监控集成到自己的项目中，通过了解总结了下面这些思路。 目前比较流行的监控系统都是基于 prometheus + grafana 搭建的，</description>
    </item>
    
    <item>
      <title>布隆过滤器（Bloom filter）</title>
      <link>https://star-lights.github.io/post/bloomfilter/</link>
      <pubDate>Thu, 07 Oct 2021 10:59:37 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/bloomfilter/</guid>
      <description>什么是布隆过滤器 布隆过滤器的本质就是位图，就是一个很长的二进制向量和一系列随机映射函数。利用这种数据结构，我们可以轻松地发现对应元素是否在集</description>
    </item>
    
    <item>
      <title>不经意传输（OT）</title>
      <link>https://star-lights.github.io/post/ot/</link>
      <pubDate>Wed, 22 Sep 2021 18:07:42 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/ot/</guid>
      <description>Oblivious Transfer 不经意传输，又称茫然传输，假设Server方有$n$条数据，Client希望查询其中的第$i$条，但是又不希望Server方知道它具体查</description>
    </item>
    
    <item>
      <title>Feldman秘密分享</title>
      <link>https://star-lights.github.io/post/feldman/</link>
      <pubDate>Wed, 22 Sep 2021 13:14:47 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/feldman/</guid>
      <description>加性秘密分享 回顾SPDZ一文中的加法计算问题。问题：$P_1、P_2、P_3$分别拥有$x、y、z$，要计算$Sum=x+y+z$。方法：将</description>
    </item>
    
    <item>
      <title>SPDZ协议</title>
      <link>https://star-lights.github.io/post/spdz/</link>
      <pubDate>Tue, 21 Sep 2021 22:08:35 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/spdz/</guid>
      <description>秘密共享求和（加法运算） 假设三个参与方$P_1、P_2、P_3$，各自拥有的值为$x、y、z$，通过秘密分享，计算$S=x+y+z$，方法如</description>
    </item>
    
    <item>
      <title>仿射加密（Affine Encyption）</title>
      <link>https://star-lights.github.io/post/affine/</link>
      <pubDate>Mon, 20 Sep 2021 20:25:01 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/affine/</guid>
      <description>凯撒密码 以古罗马的凯撒（Caesar）大帝命名的加密方法，传说凯撒曾用此方式与将军们进行联系。 加密方法非常简单，设定一个偏移量，确立明文字母</description>
    </item>
    
    <item>
      <title>Paillier加密算法</title>
      <link>https://star-lights.github.io/post/paillier/</link>
      <pubDate>Mon, 20 Sep 2021 14:54:03 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/paillier/</guid>
      <description>同态加密 1977年，Riverst、Shamir、Adleman发明了人类历史上第一个非对称加密算法：RSA加密算法。第二年，即1978年，</description>
    </item>
    
    <item>
      <title>RSA加密算法</title>
      <link>https://star-lights.github.io/post/rsa/</link>
      <pubDate>Sun, 19 Sep 2021 17:01:49 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/rsa/</guid>
      <description>质因数分解 根据算术基本定理，任意一个非质数，都可以拆分为若干质数的乘积形式，这个拆分过程，就是所谓的质因数（prime factors）分解。</description>
    </item>
    
    <item>
      <title>Diffie-Hellman密钥交换</title>
      <link>https://star-lights.github.io/post/elgamal/</link>
      <pubDate>Sat, 18 Sep 2021 21:16:39 +0800</pubDate>
      
      <guid>https://star-lights.github.io/post/elgamal/</guid>
      <description>从素数说起 素数又称为质数，是指大于1的整数，且除了1和它本身以外，不能被其他任何整数整除。在英文中，素数被称为“prime number”，“</description>
    </item>
    
  </channel>
</rss>
